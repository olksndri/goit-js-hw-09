{"mappings":"iiBAAA,IASIA,EACAC,EACAC,EAXJC,EAAAC,EAAA,SAIMC,EAAQC,SAASC,cAAc,uBAC/BC,EAAOF,SAASC,cAAc,sBAC9BE,EAASH,SAASC,cAAc,wBAChCG,EAAOJ,SAASC,cAAc,SAuCpC,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAUtC,OATc,IAAIC,SAAQ,SAACC,EAASC,GAClCC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUS,MAAAR,IAEpBM,EAAO,CAAEP,WAAUS,MAAAR,G,GAEpBA,E,IA1CPR,EAAMiB,iBAAiB,SAAS,WAC9BtB,EAAeuB,OAAOlB,EAAMmB,M,IAG9BhB,EAAKc,iBAAiB,SAAS,WAC7BrB,EAAcsB,OAAOf,EAAKgB,M,IAG5Bf,EAAOa,iBAAiB,SAAS,WAC/BpB,EAAgBqB,OAAOd,EAAOe,M,IAGhCd,EAAKY,iBAAiB,UAAU,SAAAG,GAC9BA,EAAMC,iBACN,IAAK,IAAIC,EAAI,EAAGA,GAAKzB,EAAeyB,IACxB,IAANA,IACF3B,GAAgBC,GAElBU,EAAcgB,EAAG3B,GACd4B,MAAK,SAAAC,G,IAAGjB,EAAQiB,EAARjB,SAAUkB,EAAKD,EAALR,MACjBU,EAAA5B,GAAS6B,OAAOC,QACd,uBAAwCC,OAAftB,EAAS,QAAYsB,OAANJ,EAAM,M,IAGjDK,OAAM,SAAAN,G,IAAGjB,EAAQiB,EAARjB,SAAUwB,EAAKP,EAALR,MAClBU,EAAA5B,GAAS6B,OAAOK,QACd,sBAAqCH,OAAftB,EAAS,QAAYsB,OAANE,EAAM,M,IAInDpC,EAAeuB,OAAOlB,EAAMmB,M","sources":["src/js/03-promises.js"],"sourcesContent":["'use strict';\n\nimport Notiflix from 'notiflix';\n\nconst delay = document.querySelector('input[name=\"delay\"]');\nconst step = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\nconst form = document.querySelector('.form');\n\nlet currentDelay;\nlet currentStep;\nlet currentAmount;\n\ndelay.addEventListener('input', () => {\n  currentDelay = Number(delay.value);\n});\n\nstep.addEventListener('input', () => {\n  currentStep = Number(step.value);\n});\n\namount.addEventListener('input', () => {\n  currentAmount = Number(amount.value);\n});\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  for (let i = 1; i <= currentAmount; i++) {\n    if (i !== 1) {\n      currentDelay += currentStep;\n    }\n    createPromise(i, currentDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n  currentDelay = Number(delay.value);\n});\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  let promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n"],"names":["$ce04d3a99e08e73b$var$currentDelay","$ce04d3a99e08e73b$var$currentStep","$ce04d3a99e08e73b$var$currentAmount","$6JpON","parcelRequire","$ce04d3a99e08e73b$var$delay","document","querySelector","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$form","$ce04d3a99e08e73b$var$createPromise","position","delay3","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","delay","addEventListener","Number","value","event","preventDefault","i","then","param","delay1","$parcel$interopDefault","Notify","success","concat","catch","delay2","failure"],"version":3,"file":"03-promises.99031b57.js.map"}